{"version":3,"sources":["../src/treemap_ctrl.js"],"names":["MetricsPanelCtrl","echarts","TreeMapCtrl","$scope","$injector","$rootScope","panelDefaults","textFontSetting","fontSize","color","borderSetting","borderColor","borderWidth","dataList","_","defaults","panel","events","on","onRender","bind","onDataReceived","onDataError","onInitEditMode","didRenderThisComponent","addEditorTab","console","log","_updateSeries","_initSeries","_treeMapChart","init","document","getElementById","_option","tooltip","trigger","formatter","toolbox","show","feature","mark","dataView","readOnly","restore","saveAsImage","calculable","series","_series","setOption","_changeData","array","data","str","target","name","split","value","datapoints","treeData","toFixed","push","_colorRGB2Hex","textColor","itemStyle","normal","label","textStyle","parseInt","type","emphasis","rgb","r","g","b","hex","toString","slice","templateUrl"],"mappings":"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","file":"treemap_ctrl.js","sourcesContent":["/**\n * Created by sunfei on 2017/2/23.\n */\nimport {MetricsPanelCtrl} from 'app/plugins/sdk';\nimport echarts from 'app/plugins/pili/echarts';\n\nexport class TreeMapCtrl extends MetricsPanelCtrl {\n    constructor($scope, $injector, $rootScope) {\n        super($scope, $injector);\n        this.$rootScope = $rootScope;\n        let panelDefaults = {\n            textFontSetting: {\n                fontSize: 10,\n                color: '(255,255,255)',\n\n            },\n            borderSetting: {\n                borderColor: '(0,0,0)',\n                borderWidth: 1,\n\n            },\n            dataList: null,\n\n        };\n\n        _.defaults(this.panel, panelDefaults);\n        this.events.on('render', this.onRender.bind(this));\n        this.events.on('data-received', this.onDataReceived.bind(this));\n        this.events.on('data-error', this.onDataError.bind(this));\n        this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n\n        this.didRenderThisComponent = false;\n    }\n\n    onInitEditMode() {\n        this.addEditorTab('TreeOption', 'public/plugins/pili-treemap-panel/editor.html', 2);\n    }\n\n    onDataError() {\n        console.log(\"data error!\");\n    }\n\n    onRender() {\n        this._updateSeries();\n    }\n\n    onDataReceived(dataList) {\n        if (!this.didRenderThisComponent) {\n            this._initSeries();\n            this._treeMapChart = echarts.init(document.getElementById('main'));\n            this._option = {\n                tooltip : {\n                    trigger: 'item',\n                    formatter: \"{b}: {c}\"\n                },\n                toolbox: {\n                    show : false,\n                    feature : {\n                        mark : {show: true},\n                        dataView : {show: true, readOnly: false},\n                        restore : {show: true},\n                        saveAsImage : {show: true}\n                    }\n                },\n                calculable : false,\n                series : this._series,\n\n            };\n            this._treeMapChart.setOption(this._option);\n        }\n\n        this._changeData(dataList);\n\n    }\n\n    _changeData(dataList){\n        var array = [];\n        for (var data of dataList) {\n            let str = data.target;\n            var name = str.split(': ')[1].split('}')[0];\n            var value = data.datapoints[0][0] * 100;\n            var treeData = {name: name,\n                value: value.toFixed(2)\n            };\n            array.push(treeData);\n        }\n\n        this._series[0].data = array;\n        this._treeMapChart.setOption({\n            series: this._series,\n        });\n    }\n    _updateSeries(){\n        var borderColor =  this._colorRGB2Hex(this.panel.borderSetting.borderColor);\n        var textColor = this._colorRGB2Hex(this.panel.textFontSetting.color);\n        if(!this._series){\n            return;\n        }\n        this._series[0].itemStyle.normal.label.textStyle.color = textColor;\n        this._series[0].itemStyle.normal.label.textStyle.fontSize = parseInt(this.panel.textFontSetting.fontSize);\n        this._series[0].itemStyle.normal.borderWidth = parseInt(this.panel.borderSetting.borderWidth);\n        this._series[0].itemStyle.normal.borderColor = borderColor;\n        this._treeMapChart.setOption({\n            series: this._series,\n        });\n    }\n\n\n    _initSeries(){\n        var borderColor =  this._colorRGB2Hex(this.panel.borderSetting.borderColor);\n        var textColor = this._colorRGB2Hex(this.panel.textFontSetting.color);\n        this._series = [\n            {\n                name:'矩形图',\n                type:'treemap',\n                itemStyle: {\n                    normal: {\n                        label: {\n                            show: true,\n                            formatter: \"{b}\",\n                            textStyle: {\n                                color: textColor,\n                                fontSize: parseInt(this.panel.textFontSetting.fontSize)\n                            }\n                        },\n                        borderWidth: parseInt(this.panel.borderSetting.borderWidth),\n                        borderColor: borderColor,\n                    },\n                    emphasis: {\n                        label: {\n                            show: true\n                        }\n                    }\n                },\n                data:[],\n            }\n        ];\n    }\n\n    _colorRGB2Hex(color) {\n        if(!color) return;\n        var rgb = color.split(',');\n        var r = parseInt(rgb[0].split('(')[1]);\n        var g = parseInt(rgb[1]);\n        var b = parseInt(rgb[2].split(')')[0]);\n\n        var hex = \"#\" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);\n        return hex;\n    }\n}\n\nTreeMapCtrl.templateUrl = 'module.html';\n"]}