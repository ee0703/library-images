{"version":3,"sources":["../src/top_chart.js"],"names":["echarts","_","TopChart","elementId","_elementId","_myChart","init","document","getElementById","title","text","left","tooltip","trigger","grid","right","top","bottom","width","xAxis","type","scale","position","boundaryGap","splitLine","show","axisLine","axisTick","yAxis","data","series","id","zlevel","symbol","option","dataList","sort","element1","element2","value","length","pop","yAxisData","seriesData","reverse","forEach","targetObj","push","values","join","setOption"],"mappings":";;;;;;;;;;;;;;;AAIOA,mB;;AACAC,a;;;;;;;;;;;;;;;;;;;;;AAEDC,oB;AAEF,kCAAYC,SAAZ,EAAuB;AAAA;;AACnB,yBAAKC,UAAL,GAAkBD,SAAlB;AACH;;;;kDAEa;AACV,6BAAKE,QAAL,GAAgBL,QAAQM,IAAR,CAAaC,SAASC,cAAT,CAAwB,KAAKJ,UAA7B,CAAb,EAAuD,MAAvD,CAAhB;AACA,+BAAO;AACHK,mCAAO;AACHC,sCAAM,QADH;AAEHC,sCAAM;AAFH,6BADJ;AAKHC,qCAAU;AACNC,yCAAS;AADH,6BALP;AAQHC,kCAAM;AACFC,uCAAO,EADL;AAEFC,qCAAK,EAFH;AAGFC,wCAAQ,EAHN;AAIFC,uCAAO;AAJL,6BARH;AAcHC,mCAAO;AACHC,sCAAM,OADH;AAEHC,uCAAO,IAFJ;AAGHC,0CAAU,KAHP;AAIHC,6CAAa,KAJV;AAKHC,2CAAW,EAACC,MAAM,KAAP,EALR;AAMHC,0CAAU,EAACD,MAAM,KAAP,EANP;AAOHE,0CAAU,EAACF,MAAM,KAAP;AAPP,6BAdJ;AAuBHG,mCAAO;AACHR,sCAAM,UADH;AAEHE,0CAAU,MAFP;AAGHO,sCAAM;AAHH,6BAvBJ;AA4BHC,oCAAS,CACL;AACIC,oCAAI,KADR;AAEIC,wCAAQ,CAFZ;AAGIZ,sCAAM,KAHV;AAIIa,wCAAQ,MAJZ;AAKIJ,sCAAM;AALV,6BADK;;AA5BN,yBAAP;AAuCH;;;mDAEcK,M,EAAQC,Q,EAAU;AAC7BA,mCAAWA,SAASC,IAAT,CAAc,UAACC,QAAD,EAAWC,QAAX;AAAA,mCAAwBA,SAASC,KAAT,GAAiBF,SAASE,KAAlD;AAAA,yBAAd,CAAX;;AAEA,+BAAOJ,SAASK,MAAT,GAAkB,EAAzB,EAA6B;AACzBL,qCAASM,GAAT;AACH;AACDP,+BAAON,KAAP,GAAeM,OAAON,KAAP,IAAgB,EAACC,MAAM,EAAP,EAA/B;AACAK,+BAAOJ,MAAP,GAAgBI,OAAOJ,MAAP,IAAiB,CAAC;AAC9BC,gCAAI,KAD0B,EACnBF,MAAM;AADa,yBAAD,CAAjC;;AAIA,4BAAMa,YAAYR,OAAON,KAAP,CAAaC,IAA/B;AACA,4BAAMc,aAAaT,OAAOJ,MAAP,CAAc,CAAd,EAAiBD,IAApC;;AAEAM,iCAASS,OAAT,GAAmBC,OAAnB,CAA2B,gBAAwB;AAAA,gCAAtBC,SAAsB,QAAtBA,SAAsB;AAAA,gCAAXP,KAAW,QAAXA,KAAW;;AAC/CG,sCAAUK,IAAV,CAAe9C,EAAE+C,MAAF,CAASF,SAAT,EAAoBG,IAApB,CAAyB,GAAzB,CAAf;AACAN,uCAAWI,IAAX,CAAgBR,KAAhB;AACH,yBAHD;;AAKA,6BAAKlC,QAAL,CAAc6C,SAAd,CAAwBhB,MAAxB;AACH;;;;;;+BAGUhC,Q","file":"top_chart.js","sourcesContent":["/**\n * Created by taozeyu on 2017/3/10.\n */\n\nimport echarts from 'app/plugins/pili/echarts';\nimport _ from 'lodash';\n\nclass TopChart {\n\n    constructor(elementId) {\n        this._elementId = elementId;\n    }\n\n    setupOption() {\n        this._myChart = echarts.init(document.getElementById(this._elementId), 'dark');\n        return {\n            title: {\n                text: 'Top 10',\n                left: 'center',\n            },\n            tooltip : {\n                trigger: 'item'\n            },\n            grid: {\n                right: 40,\n                top: 70,\n                bottom: 40,\n                width: '70%'\n            },\n            xAxis: {\n                type: 'value',\n                scale: true,\n                position: 'top',\n                boundaryGap: false,\n                splitLine: {show: false},\n                axisLine: {show: false},\n                axisTick: {show: false},\n            },\n            yAxis: {\n                type: 'category',\n                position: 'left',\n                data: [],\n            },\n            series : [\n                {\n                    id: 'bar',\n                    zlevel: 2,\n                    type: 'bar',\n                    symbol: 'none',\n                    data: [],\n                },\n            ],\n\n        };\n    }\n\n    updateDataList(option, dataList) {\n        dataList = dataList.sort((element1, element2) => element2.value - element1.value);\n\n        while (dataList.length > 10) {\n            dataList.pop();\n        }\n        option.yAxis = option.yAxis || {data: []};\n        option.series = option.series || [{\n            id: 'bar', data: []\n        }];\n\n        const yAxisData = option.yAxis.data;\n        const seriesData = option.series[0].data;\n\n        dataList.reverse().forEach(({targetObj, value}) => {\n            yAxisData.push(_.values(targetObj).join('/'));\n            seriesData.push(value);\n        });\n\n        this._myChart.setOption(option);\n    }\n}\n\nexport default TopChart;"]}